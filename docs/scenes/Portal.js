import{aa as i,ah as t,ai as e}from"../vendor.js";class s{constructor(t){var{artifact:e,mergeConfig:s,preload:r}=t;this.config=s(e.portal,{in:"inside",out:"clipCube",door:"door",target:"target",doorPosition:{x:0,y:0,z:0},doorWidth:1.4,doorHeight:2,cubeSize:4.05,doorZOffset:.05}),this.doorXOffset=this.config.doorWidth/2,this.cubeOffset=this.config.cubeSize/2,this.doorZOffset=.1,this.rotation=1,this.walkedThroughDoor=!1,this.rotationNormal=new i(0,1,0)}afterLoadModel(e){var{engine:s}=e;this.engine=s,this.camera=s.camera;var{model:r}=s;this.inside=r.getObjectByName(this.config.in),this.clipCube=r.getObjectByName(this.config.out),this.door=r.getObjectByName(this.config.door),this.rayTarget=r.getObjectByName(this.config.target),this.raycaster=new t,this.rayDirection=new i(0,0,-1)}isInDoor(i){var t=this.camera.position;this.rayDirection.z=i,this.raycaster.set(t,this.rayDirection);var e=this.raycaster.intersectObject(this.rayTarget);if(e.length){var{distance:s}=e[0];return s<.5}return!1}tick(){var{x:i,y:t,z:s}=this.camera.position,r=this.isInDoor(this.flipped?-1:1),o=this.isInDoor(this.flipped?1:-1),h=s*(this.flipped?-1:1);this.isInside?this.isInside&&h>=0&&o&&(this.triggerOutside=!0):h<=0&&r&&(this.triggerInside=!0),this.triggerInside&&!this.isInside&&(this.isInside=!0,this.triggerInside=!1,this.clipCube.visible&&(this.clipCube.visible=!1)),this.triggerOutside&&this.isInside&&(this.isInside=!1,this.triggerOutside=!1,this.clipCube.visible||(this.clipCube.visible=!0)),s<=0&&!this.flipped&&!this.isInside?(this.flipped=!0,this.engine.model.quaternion.setFromAxisAngle(this.rotationNormal,e.degToRad(180))):s>=0&&this.flipped&&!this.isInside&&(this.flipped=!1,this.engine.model.quaternion.setFromAxisAngle(this.rotationNormal,e.degToRad(0)))}}export{s as default};
