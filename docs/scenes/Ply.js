import{a9 as e,aK as o,c as a,W as i,C as t,S as r,_ as l,aJ as s,a as n,b0 as f}from"../vendor.js";class p{constructor(a){var{artifact:i,mergeConfig:t}=a;this.config=t(i.ply,{blending:e,depthTest:!1,file:i.slug,materials:["yellow"],positionOffset:.05,size:1,sizeAttenuation:0,scaleOffset:.01,opacity:"1.0",fallbackAlphaDivisor:3,computeVertexNormals:!1,vertexColors:!1}),this.model=new o}preload(e){var o=this;return a((function*(){var{preload:a}=e,{file:t,computeVertexNormals:r}=o.config;t.startsWith("/")||(t="".concat(i.STATIC_URL,"/ply/").concat(t,".ply")),t.endsWith(".ply")||(t+=".ply");var l=a.plyLoader;o.geo=yield a.promisifiedLoad({loader:l,file:t}),r&&o.geo.computeVertexNormals()}))()}beforeLoadModel(e){var{engine:o}=e,{blending:a,depthTest:p,materials:c,size:u,sizeAttenuation:d,positionOffset:m,scaleOffset:v,opacity:h,fallbackAlphaDivisor:g,vertexColors:y}=this.config;if(y){var x=new f({vertexColors:y,size:u,sizeAttenuation:d,opacity:h,transparent:"1.0"!==h}),C=new s(this.geo,x);this.model.add(C)}else{var S={fragmentShader:"precision highp float;\n#define GLSLIFY 1\nuniform vec3 uColor;uniform float uAlpha;void main(){vec4 col=vec4(uColor,uAlpha);gl_FragColor=col;}",vertexShader:"precision highp float;\n#define GLSLIFY 1\nuniform float uSize;void main(){gl_PointSize=uSize;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",depthTest:p,blending:a,uniforms:{uSize:{value:u*i.pxRatio,type:"f"},uColor:{value:new t(16711680),type:"f3"},uAlpha:{value:1,type:"f"}}},z=o.XR?1:g,A=new r(l(l({},S),{},{uniforms:l({},S.uniforms)})),w=new s(this.geo,A);c.forEach(((e,o)=>{var a=h;if(n.arr(e)){var[i,r=h]=e;a=r,e=i}a=(parseFloat(a)/z).toFixed(2).toString();var l=w.clone();l.material=l.material.clone(),l.material.uniforms.uColor.value=new t(e),l.material.uniforms.uAlpha.value=a;var s=1+o*v;l.scale.set(s,s,s),l.position.x=o*m,this.model.add(l)}))}}}export{p as default};
