class e{constructor(e){var{artifact:i}=e,{distanceModifier:a=1,distanceThreshold:t=2,minAlpha:r=.1,maxAlpha:s=1}=i;this.distanceModifier=a,this.distanceThreshold=t,this.minAlpha=r,this.maxAlpha=s}init(e){var{engine:i,preload:a}=e;this.engine=i,this.camera=i.camera;var{scene:t}=a.assets.gltf;this.trigger={},this.hidden={},t.traverse((e=>{if(e.name.startsWith("trigger_")){var i=e.name.replace("trigger_","");this.trigger[i]=e}else if(e.name.startsWith("hidden_")){var a=e.name.replace("hidden_","");this.hidden[a]=e}}))}calculateAlpha(){var e=Object.entries(this.trigger).map((e=>{var[i,a]=e,t=this.distanceThreshold*this.distanceThreshold,r=this.camera.position.distanceToSquared(a.position)-t,s=((100-Math.max(0,r)*this.distanceModifier)/100).toFixed(2);return[i,Math.min(Math.max(this.minAlpha,s),this.maxAlpha)]}));return Object.fromEntries(e)}render(){var{camera:e,renderer:i,scene:a}=this.engine,t=this.calculateAlpha();Object.entries(t).map((e=>{var[i,a]=e;this.hidden[i].material.opacity=a})),i.render(a,e)}}export{e as default};
