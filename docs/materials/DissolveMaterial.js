import{aB as e}from"../vendor.js";class n extends e{constructor(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.vertexShader||(e.vertexShader=r),e.fragmentShader||(e.fragmentShader=o),e.uniforms=mergeConfig(e.uniforms,{uTex:{type:"t",value:e.tex},uTexDissolve:{type:"t",value:e.texDissolve},uTime:{type:"f",value:0}}),super(e)}}var r="\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",o="\nuniform sampler2D tex;\nuniform sampler2D tex_dissolve;\nuniform float uTime;\nvarying vec2 vUv;\n\nvoid main() {\n  vec4 dissolveData = texture2D(tex_dissolve, vUv);\n  float greyValue = dissolveData.r;\n  float difference = greyValue - uTime;\n\n  gl_FragColor = texture2D(tex, vUv);\n\n  if(difference < 0.1){\n    gl_FragColor.r = difference / 0.1;\n    gl_FragColor.g = 0.0;\n    gl_FragColor.b = 0.0;\n  }\n\n  if(difference < 0.01){\n    discard;\n  }\n}\n";export{n as DissolveMaterial};
